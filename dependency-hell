# Dream scenario
digraph G {
  "Business processes" -> "Revenue"
  "Business processes" -> "Cost"
  "Revenue" -> "Provision"
  "Revenue" -> "Develop"
  "Revenue" -> "Configure"
  "Cost" -> "Troubleshoot"
  "Cost" -> "Re-create"
  "Cost" -> "Configure"
  "Cost" -> "Monitor"
  "Provision" -> "Monolith"
  "Provision" -> "Multi-tier"
  "Provision" -> "API Mgmt"
  "Provision" -> "Integration"
  "Provision" -> "Rules"
  "Provision" -> "Microservice"
  "Provision" -> "FaaS"
  "Provision" -> "AI/ML"
  "Monitor" -> "Monolith"
  "Monitor" -> "Multi-tier"
  "Monitor" -> "API Mgmt"
  "Monitor" -> "Integration"
  "Monitor" -> "Rules"
  "Monitor" -> "Microservice"
  "Monitor" -> "FaaS"
  "Monitor" -> "AI/ML"
  "Develop" -> "Monolith"
  "Develop" -> "Multi-tier"
  "Develop" -> "API Mgmt"
  "Develop" -> "Integration"
  "Develop" -> "Rules"
  "Develop" -> "Microservice"
  "Develop" -> "FaaS"
  "Develop" -> "AI/ML"
  "Configure" -> "Monolith"
  "Configure" -> "Multi-tier"
  "Configure" -> "API Mgmt"
  "Configure" -> "Integration"
  "Configure" -> "Rules"
  "Configure" -> "Microservice"
  "Configure" -> "FaaS"
  "Configure" -> "AI/ML"
  "Troubleshoot" -> "Monolith"
  "Troubleshoot" -> "Multi-tier"
  "Troubleshoot" -> "API Mgmt"
  "Troubleshoot" -> "Integration"
  "Troubleshoot" -> "Rules"
  "Troubleshoot" -> "Microservice"
  "Troubleshoot" -> "FaaS"
  "Troubleshoot" -> "AI/ML"
  "Re-create" -> "FaaS"
  "Re-create" -> "Multi-tier"
  "Re-create" -> "API Mgmt"
  "Re-create" -> "Integration"
  "Re-create" -> "Rules"
  "Re-create" -> "Microservice"
  "Re-create" -> "AI/ML"
  "Monolith" -> "Windows"
  "Monolith" -> "Linux"
  "Monolith" -> "Kubernetes"
  "Monolith" -> "Legacy OS (UNIX/Z)"
  "Multi-tier" -> "Windows"
  "Multi-tier" -> "Linux"
  "Multi-tier" -> "Kubernetes"
  "API Mgmt" -> "Linux"
  "API Mgmt" -> "Kubernetes"
  "Integration" -> "Linux"
  "Integration" -> "Kubernetes"
  "Rules" -> "Linux"
  "Rules" -> "Kubernetes"
  "Microservice" -> "Linux"
  "Microservice" -> "Kubernetes"
  "FaaS" -> "Linux"
  "FaaS" -> "Kubernetes"
  "AI/ML" -> "Linux"
  "AI/ML" -> "Kubernetes"
  "Kubernetes" -> "Linux base image"
  "Linux base image" -> "Linux"
  "Windows" -> "x86"
  "Windows" -> "ARM"
  "Windows" -> "GPU"
  "Windows" -> "Cloud"
  "Linux" -> "x86"
  "Linux" -> "ARM"
  "Linux" -> "GPU"
  "Linux" -> "Cloud"
  "Linux" -> "Power/Z"
  "Legacy OS (UNIX/Z)" -> "Power/Z"
  "x86" -> "SAN"
  "x86" -> "Local disk"
  "x86" -> "SDS"
  "x86" -> "Cloud storage"
  "x86" -> "Cloud SDN"
  "x86" -> "HW network"
  "x86" -> "SDN"
  "SDS" -> "Cloud storage"
  "SDN" -> "Cloud SDN"
  "ARM" -> "SAN"
  "ARM" -> "SDS"
  "ARM" -> "Local disk"
  "ARM" -> "Cloud storage"
  "ARM" -> "Cloud SDN"
  "ARM" -> "HW network"
  "ARM" -> "SDN"
  "Power/Z" -> "SAN"
  "Power/Z" -> "Local disk"
  "Power/Z" -> "SDN"
  "Power/Z" -> "SDS"
  "Cloud" -> "Cloud SDN"
  "Cloud" -> "Cloud storage"
}

# Container depdency hell

digraph G {
  "Business processes" -> "Revenue"
  "Business processes" -> "Revenue X"
  "Business processes" -> "Cost"
  "Revenue" -> "Provision"
  "Revenue" -> "Develop"
  "Revenue" -> "Configure"
  "Revenue X" -> "Provision k8s 1.18"
  "Revenue X" -> "Develop k8s 1.18"
  "Revenue X" -> "Configure k8s 1.18"
  "Cost" -> "Troubleshoot"
  "Cost" -> "Re-create"
  "Cost" -> "Configure"
  "Cost" -> "Monitor"
  "Cost" -> "Troubleshoot k8s 1.18"
  "Cost" -> "Re-create k8s 1.18"
  "Cost" -> "Configure k8s 1.18"
  "Cost" -> "Monitor k8s 1.18"
  "Provision" -> "Monolith"
  "Provision" -> "Multi-tier"
  "Provision" -> "API Mgmt"
  "Provision" -> "Integration"
  "Provision k8s 1.18" -> "Integration k8s 1.18"
  "Provision" -> "Rules"
  "Provision k8s 1.18" -> "Rules k8s 1.18"
  "Provision" -> "Microservice"
  "Provision k8s 1.18" -> "Microservice k8s 1.18"
  "Provision" -> "FaaS"
  "Provision" -> "AI/ML"
  "Provision k8s 1.18" -> "AI/ML k8s 1.18"
  "Monitor" -> "Monolith"
  "Monitor" -> "Multi-tier"
  "Monitor" -> "API Mgmt"
  "Monitor" -> "Integration"
  "Monitor k8s 1.18" -> "Integration k8s 1.18"
  "Monitor" -> "Rules"
  "Monitor k8s 1.18" -> "Rules k8s 1.18"
  "Monitor" -> "Microservice"
  "Monitor k8s 1.18" -> "Microservice k8s 1.18"
  "Monitor" -> "FaaS"
  "Monitor" -> "AI/ML"
  "Monitor k8s 1.18" -> "AI/ML k8s 1.18"
  "Develop" -> "Monolith"
  "Develop" -> "Multi-tier"
  "Develop" -> "API Mgmt"
  "Develop" -> "Integration"
  "Develop k8s 1.18" -> "Integration k8s 1.18"
  "Develop" -> "Rules"
  "Develop k8s 1.18" -> "Rules k8s 1.18"
  "Develop" -> "Microservice"
  "Develop k8s 1.18" -> "Microservice k8s 1.18"
  "Develop" -> "FaaS"
  "Develop" -> "AI/ML"
  "Develop k8s 1.18" -> "AI/ML k8s 1.18"
  "Configure" -> "Monolith"
  "Configure" -> "Multi-tier"
  "Configure" -> "API Mgmt"
  "Configure" -> "Integration"
  "Configure k8s 1.18" -> "Integration k8s 1.18"
  "Configure" -> "Rules"
  "Configure k8s 1.18" -> "Rules k8s 1.18"
  "Configure" -> "Microservice"
  "Configure k8s 1.18" -> "Microservice k8s 1.18"
  "Configure" -> "FaaS"
  "Configure" -> "AI/ML"
  "Troubleshoot" -> "Monolith"
  "Troubleshoot" -> "Multi-tier"
  "Troubleshoot" -> "API Mgmt"
  "Troubleshoot" -> "Integration"
  "Troubleshoot k8s 1.18" -> "Integration k8s 1.18"
  "Troubleshoot" -> "Rules"
  "Troubleshoot k8s 1.18" -> "Rules k8s 1.18"
  "Troubleshoot" -> "Microservice"
  "Troubleshoot k8s 1.18" -> "Microservice k8s 1.18"
  "Troubleshoot" -> "FaaS"
  "Troubleshoot" -> "AI/ML"
  "Troubleshoot k8s 1.18" -> "AI/ML k8s 1.18"
  "Re-create" -> "FaaS"
  "Re-create" -> "Multi-tier"
  "Re-create" -> "API Mgmt"
  "Re-create" -> "Integration"
  "Re-create k8s 1.18" -> "Integration k8s 1.18"
  "Re-create" -> "Rules"
  "Re-create" -> "Rules"
  "Re-create" -> "Microservice"
  "Re-create k8s 1.18" -> "Microservice k8s 1.18"
  "Re-create" -> "AI/ML"
  "Re-create k8s 1.18" -> "AI/ML k8s 1.18"
  "Monolith" -> "Windows"
  "Monolith" -> "Linux"
  "Monolith" -> "Kubernetes"
  "Monolith" -> "Legacy OS (UNIX/Z)"
  "Multi-tier" -> "Windows"
  "Multi-tier" -> "Linux"
  "Multi-tier" -> "Kubernetes"
  "API Mgmt" -> "Linux"
  "API Mgmt" -> "Kubernetes"
  "Integration" -> "Linux"
  "Integration" -> "Kubernetes"
  "Integration k8s 1.18" -> "Kubernetes 1.18"
  "Rules" -> "Linux"
  "Rules" -> "Kubernetes"
  "Rules k8s 1.18" -> "Kubernetes 1.18"
  "Microservice" -> "Linux"
  "Microservice" -> "Kubernetes"
  "Microservice k8s 1.18" -> "Kubernetes 1.18"
  "FaaS" -> "Linux"
  "FaaS" -> "Kubernetes"
  "AI/ML" -> "Linux"
  "AI/ML" -> "Kubernetes"
  "AI/ML k8s 1.18" -> "Kubernetes 1.18"
  "Kubernetes" -> "Linux base image"
  "Kubernetes 1.18" -> "Linux base image X"
  "Linux base image" -> "Linux"
  "Linux base image X" -> "Linux X"
  "Windows" -> "x86"
  "Windows" -> "ARM"
  "Windows" -> "GPU"
  "Windows" -> "Cloud"
  "Linux" -> "x86"
  "Linux" -> "ARM"
  "Linux" -> "GPU"
  "Linux" -> "Cloud"
  "Linux X" -> "Cloud X"
  "Linux" -> "Power/Z"
  "Legacy OS (UNIX/Z)" -> "Power/Z"
  "x86" -> "SAN"
  "x86" -> "Local disk"
  "x86" -> "SDS"
  "x86" -> "Cloud storage"
  "x86" -> "Cloud SDN"
  "x86" -> "HW network"
  "x86" -> "SDN"
  "SDS" -> "Cloud storage"
  "SDN" -> "Cloud SDN"
  "ARM" -> "SAN"
  "ARM" -> "SDS"
  "ARM" -> "Local disk"
  "ARM" -> "Cloud storage"
  "ARM" -> "Cloud SDN"
  "ARM" -> "HW network"
  "ARM" -> "SDN"
  "Power/Z" -> "SAN"
  "Power/Z" -> "Local disk"
  "Power/Z" -> "SDN"
  "Power/Z" -> "SDS"
  "Cloud" -> "Cloud storage"
  "Cloud" -> "Cloud SDN"
  "Cloud X" -> "Cloud X storage"
  "Cloud X" -> "Cloud X SDN"
}
